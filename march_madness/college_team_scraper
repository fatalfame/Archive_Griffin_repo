import requests
from lxml import html
import csv


fieldnames = ['School', 'Season', 'Conf', 'W', 'L', 'Percent', 'SOS', 'OFF', 'DEF', 'AP High', 'AP Final', 'NCAA']
writer = csv.DictWriter(open('..//Code/personal/march_madness/team_stats.csv', 'wb'),
                        fieldnames=fieldnames)
writer.writeheader()


def main():
    r = requests.get('http://www.sports-reference.com/cbb/schools/')
    tree = html.fromstring(r.content)
    teams = tree.xpath(".//*[@id='schools']/tbody/tr/td[2]/a")
    link = 'http://www.sports-reference.com'
    for team in teams:
        link_list = []
        school = team.xpath(".//@href")[0]
        school_name = team.xpath('.//text()')[0]
        link_list.append(link+str(school))
        print school_name
        for item in link_list:
            d = requests.get(item)
            details = html.fromstring(d.content)
            stats = details.xpath(".//tbody/tr")
            for row in stats:
                season = convert(row.xpath(".//td[2]/a//text()"))
                conf = convert(row.xpath(".//td[3]/a//text()"))
                wins = value(row.xpath(".//td[4]//text()"))
                loss = value(row.xpath(".//td[5]//text()"))
                percent = value(row.xpath(".//td[6]//text()"))
                sos = value(row.xpath(".//td[8]//text()"))
                off = value(row.xpath(".//td[9]//text()"))
                defense = value(row.xpath(".//td[10]//text()"))
                ap_high = value(row.xpath(".//td[12]//text()"))
                ap_final = value(row.xpath(".//td[13]//text()"))
                ncaa = convert(row.xpath(".//td[14]//text()"))
                if ncaa in ('Lost First Round', 'Lost Opening Round', 'Lost Regional Final', 'Lost Regional Semifinal',
                            'Lost Second Round', 'Lost Third Round', ''):
                    ncaa = int(0)
                if ncaa in ('Lost National Final', 'Lost National SemiFinal', 'Lost Regional Final (Final Four)',
                            'Won National Final'):
                    ncaa = int(1)
                writer.writerow({'School': school_name, 'Season': season, 'Conf': conf, 'W': wins, 'L': loss,
                                 'Percent': percent, 'SOS': sos, 'OFF': off, 'DEF': defense, 'AP High': ap_high,
                                 'AP Final': ap_final, 'NCAA': ncaa})


def convert(val):
    if val:
        x = val[0]
        return x
    return None

def value(val):
    if val:
        x = val[0]
        y = float(x)
        return y
    return None


if __name__ == '__main__':
    main()
